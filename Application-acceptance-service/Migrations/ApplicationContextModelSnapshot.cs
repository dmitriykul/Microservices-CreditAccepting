// <auto-generated />
using System;
using Application_acceptance_service.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Application_acceptance_service.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Application_acceptance_service.Domain.Applicant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AddressBirth")
                        .HasColumnType("text");

                    b.Property<string>("AddressCurrent")
                        .HasColumnType("text");

                    b.Property<string>("CityBirth")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateBirth")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("INN")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text");

                    b.Property<string>("PassportNum")
                        .HasColumnType("text");

                    b.Property<string>("SNILS")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Applicants");
                });

            modelBuilder.Entity("Application_acceptance_service.Domain.Application", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ApplicantId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ApplicationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ApplicationNum")
                        .HasColumnType("text");

                    b.Property<string>("BranchBank")
                        .HasColumnType("text");

                    b.Property<string>("BranchBankAddress")
                        .HasColumnType("text");

                    b.Property<long>("CreditManagerId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("RequestedCreditId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ScoringDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("ScoringStatus")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantId");

                    b.HasIndex("RequestedCreditId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("Application_acceptance_service.Domain.RequestedCredit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("AnnualSalary")
                        .HasColumnType("numeric");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<string>("CompanyName")
                        .HasColumnType("text");

                    b.Property<int>("CreditType")
                        .HasColumnType("integer");

                    b.Property<decimal>("MonthlySalary")
                        .HasColumnType("numeric");

                    b.Property<decimal>("RequestedAmount")
                        .HasColumnType("numeric");

                    b.Property<string>("RequestedCurrency")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RequestedCredits");
                });

            modelBuilder.Entity("Application_acceptance_service.Domain.Application", b =>
                {
                    b.HasOne("Application_acceptance_service.Domain.Applicant", "Applicant")
                        .WithMany("Applications")
                        .HasForeignKey("ApplicantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Application_acceptance_service.Domain.RequestedCredit", "RequestedCredit")
                        .WithMany("Applications")
                        .HasForeignKey("RequestedCreditId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Applicant");

                    b.Navigation("RequestedCredit");
                });

            modelBuilder.Entity("Application_acceptance_service.Domain.Applicant", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("Application_acceptance_service.Domain.RequestedCredit", b =>
                {
                    b.Navigation("Applications");
                });
#pragma warning restore 612, 618
        }
    }
}
